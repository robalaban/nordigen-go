/*
 * Nordigen Account Information Services API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0 (v2)
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package nordigen

import (
	"time"
)

// SpectacularRequisitionV2 - Create requisition.
type SpectacularRequisitionV2 struct {

	Id string `json:"id,omitempty"`

	// The date & time at which the requisition was created.
	Created *time.Time `json:"created,omitempty"`

	// redirect URL to your application after end-user authorization with ASPSP
	Redirect *string `json:"redirect"`

	// status of this requisition
	Status *Status6e6Enum `json:"status,omitempty"`

	// an Institution ID for this Requisition
	InstitutionId string `json:"institution_id"`

	// EUA associated with this requisition
	Agreement string `json:"agreement,omitempty"`

	// additional ID to identify the end user
	Reference string `json:"reference,omitempty"`

	// array of account IDs retrieved within a scope of this requisition
	Accounts []interface{} `json:"accounts,omitempty"`

	// A two-letter country code (ISO 639-1)
	UserLanguage string `json:"user_language,omitempty"`

	// link to initiate authorization with Institution
	Link string `json:"link,omitempty"`

	// optional SSN field to verify ownership of the account
	Ssn string `json:"ssn,omitempty"`

	// option to enable account selection view for the end user
	AccountSelection bool `json:"account_selection,omitempty"`
}

// AssertSpectacularRequisitionV2Required checks if the required fields are not zero-ed
func AssertSpectacularRequisitionV2Required(obj SpectacularRequisitionV2) error {
	elements := map[string]interface{}{
		"redirect": obj.Redirect,
		"institution_id": obj.InstitutionId,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if obj.Status != nil {
		if err := AssertStatus6e6EnumRequired(*obj.Status); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseSpectacularRequisitionV2Required recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of SpectacularRequisitionV2 (e.g. [][]SpectacularRequisitionV2), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseSpectacularRequisitionV2Required(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aSpectacularRequisitionV2, ok := obj.(SpectacularRequisitionV2)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertSpectacularRequisitionV2Required(aSpectacularRequisitionV2)
	})
}
