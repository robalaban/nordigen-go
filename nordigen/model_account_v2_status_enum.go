/*
 * Nordigen Account Information Services API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0 (v2)
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package nordigen

type AccountV2StatusEnum string

// List of AccountV2StatusEnum
const (
	DISCOVEREDUSER_HAS_SUCCESSFULLY_AUTHENTICATED_AND_ACCOUNT_IS_DISCOVERED                             AccountV2StatusEnum = "{\"DISCOVERED\":\"User has successfully authenticated and account is discovered\"}"
	PROCESSINGACCOUNT_IS_BEING_PROCESSED_BY_THE_INSTITUTION                                             AccountV2StatusEnum = "{\"PROCESSING\":\"Account is being processed by the Institution\"}"
	ERRORAN_ERROR_WAS_ENCOUNTERED_WHEN_PROCESSING_ACCOUNT                                               AccountV2StatusEnum = "{\"ERROR\":\"An error was encountered when processing account\"}"
	EXPIREDACCESS_TO_ACCOUNT_HAS_EXPIRED_AS_SET_IN_END_USER_AGREEMENT                                   AccountV2StatusEnum = "{\"EXPIRED\":\"Access to account has expired as set in End User Agreement\"}"
	READYACCOUNT_HAS_BEEN_SUCCESSFULLY_PROCESSED                                                        AccountV2StatusEnum = "{\"READY\":\"Account has been successfully processed\"}"
	SUSPENDEDACCOUNT_HAS_BEEN_SUSPENDED__MORE_THAN_10_CONSECUTIVE_FAILED_ATTEMPTS_TO_ACCESS_THE_ACCOUNT AccountV2StatusEnum = "{\"SUSPENDED\":\"Account has been suspended (more than 10 consecutive failed attempts to access the account)\"}"
)

// AssertAccountV2StatusEnumRequired checks if the required fields are not zero-ed
func AssertAccountV2StatusEnumRequired(obj AccountV2StatusEnum) error {
	return nil
}

// AssertRecurseAccountV2StatusEnumRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of AccountV2StatusEnum (e.g. [][]AccountV2StatusEnum), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseAccountV2StatusEnumRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aAccountV2StatusEnum, ok := obj.(AccountV2StatusEnum)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertAccountV2StatusEnumRequired(aAccountV2StatusEnum)
	})
}
