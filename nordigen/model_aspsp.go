/*
 * Nordigen Account Information Services API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0 (v2)
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package nordigen

// Aspsp - Represents an ASPSP.
type Aspsp struct {

	Id string `json:"id"`

	Name string `json:"name"`

	Bic string `json:"bic,omitempty"`

	TransactionTotalDays string `json:"transaction_total_days,omitempty"`

	Countries []string `json:"countries"`

	Logo string `json:"logo"`
}

// AssertAspspRequired checks if the required fields are not zero-ed
func AssertAspspRequired(obj Aspsp) error {
	elements := map[string]interface{}{
		"id": obj.Id,
		"name": obj.Name,
		"countries": obj.Countries,
		"logo": obj.Logo,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseAspspRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Aspsp (e.g. [][]Aspsp), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseAspspRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aAspsp, ok := obj.(Aspsp)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertAspspRequired(aAspsp)
	})
}
