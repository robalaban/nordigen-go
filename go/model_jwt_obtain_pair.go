/*
 * Nordigen Account Information Services API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0 (v2)
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

// JwtObtainPair - Obtain JWT pair.
type JwtObtainPair struct {

	// Secret id from /user-secrets/
	SecretId string `json:"secret_id"`

	// Secret key from /user-secrets/
	SecretKey string `json:"secret_key"`
}

// AssertJwtObtainPairRequired checks if the required fields are not zero-ed
func AssertJwtObtainPairRequired(obj JwtObtainPair) error {
	elements := map[string]interface{}{
		"secret_id": obj.SecretId,
		"secret_key": obj.SecretKey,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseJwtObtainPairRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of JwtObtainPair (e.g. [][]JwtObtainPair), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseJwtObtainPairRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aJwtObtainPair, ok := obj.(JwtObtainPair)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertJwtObtainPairRequired(aJwtObtainPair)
	})
}
