/*
 * Nordigen Account Information Services API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0 (v2)
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type InlineResponse2002TransactionsBooked struct {

	TransactionId string `json:"transactionId,omitempty"`

	DebtorName string `json:"debtorName,omitempty"`

	DebtorAccount InlineResponse2002TransactionsBookedDebtorAccount `json:"debtorAccount,omitempty"`

	TransactionAmount InlineResponse2002TransactionsPendingTransactionAmount `json:"transactionAmount,omitempty"`

	BankTransactionCode string `json:"bankTransactionCode,omitempty"`

	BookingDate string `json:"bookingDate,omitempty"`

	ValueDate string `json:"valueDate,omitempty"`

	RemittanceInformationUnstructured string `json:"remittanceInformationUnstructured,omitempty"`
}

// AssertInlineResponse2002TransactionsBookedRequired checks if the required fields are not zero-ed
func AssertInlineResponse2002TransactionsBookedRequired(obj InlineResponse2002TransactionsBooked) error {
	if err := AssertInlineResponse2002TransactionsBookedDebtorAccountRequired(obj.DebtorAccount); err != nil {
		return err
	}
	if err := AssertInlineResponse2002TransactionsPendingTransactionAmountRequired(obj.TransactionAmount); err != nil {
		return err
	}
	return nil
}

// AssertRecurseInlineResponse2002TransactionsBookedRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of InlineResponse2002TransactionsBooked (e.g. [][]InlineResponse2002TransactionsBooked), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseInlineResponse2002TransactionsBookedRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aInlineResponse2002TransactionsBooked, ok := obj.(InlineResponse2002TransactionsBooked)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertInlineResponse2002TransactionsBookedRequired(aInlineResponse2002TransactionsBooked)
	})
}
